buildscript {
  ext.kotlin_version = '1.0.2'
  ext.kotlin_xml_dsl_version = '0.1.6'
  ext.kotlin_xml_bind_version = '0.1.9'

  repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "com.gradle.publish:plugin-publish-plugin:0.9.4"
  }
}

plugins {
  id "com.jfrog.bintray" version "1.5"
}

if (rootProject.getProperties().containsKey("publish_version")) {
  version = rootProject.getProperties()["publish_version"]
} else if (System.getenv("TRAVIS_BUILD_NUMBER") != null) {
  version = "0.1." + System.getenv("TRAVIS_BUILD_NUMBER")
} else if (rootProject.hasProperty('teamcity')) {
  version = rootProject['teamcity']['build.number']
} else {
  version = 'SNAPSHOT'
}

println "Actual Target Version = ${rootProject.version}"

subprojects {
  apply plugin: 'java'
  apply plugin: 'kotlin'
  apply plugin: 'maven'
  apply plugin: 'maven-publish'

  group = 'org.jonnyzzz.teamcity.dsl'
  version = rootProject.version

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/jonnyzzz/maven" }
  }

  publishToMavenLocal.inputs.file project.buildFile

  tasks.withType(Test).each { test ->
    test.outputs.upToDateWhen { false }

    if (System.getenv("TRAVIS_CI") != null) {
      test.testLogging.showStandardStreams = true
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.12'
}

task bintrayUploadEx {
  //NOP
}

task localUploadEx {
  //NOP
}
